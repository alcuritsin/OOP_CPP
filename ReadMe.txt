::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::                                                                                                                        ::
::    #######           #######         ##########                               #######                                  ::
::  ##### #####       ##### #####       ####   ####                            ##### #####       #####          #####     ::
:: ####     ####     ####     ####      ####    ###                           ####     ####      #####          #####     ::
:: ####     ####     ####     ####      ####   ####     ######  ##  ###       ####           #############  ############# ::
:: ####     ####     ####     ####      ##########     ##    ## ## #   ##     ####           #############  ############# ::
:: ####     ####     ####     ####      ####           ##    ## ###    ##     ####     ####      #####          #####     ::
::  ##### #####       ##### #####       ####           ##    ## ##     ##      ##### #####       #####          #####     ::
::    #######    ###   #######     ###  ####            ######  ##     ##        #######                                  ::
::                                                                                                                        ::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

2021.03.17		::Введение в ООП.::

repos\Intro\main.cpp

	ООП (Object Oriented Programming) - это подход (парадигма - способ что-то делать), при котором
программа состоит из объектов реального мира, и взаимодействия между этими объектами.

	Ключевым понятием ООП является 'Объект'.

	"Объект" - это какая-то сущность в реальном мире, которая существует в пространстве и времени.
Например - ручка, телефон, человек и т.д.
	
	Объекты являются экземплярами какого либо класса или структуры. Ещё говорят, что объекты принято
классифицировать. Например - компьютер (это класс) -- компьютер за котрым мы работаем (это объект).

	Класс (структура) описывает то, каким является объект. При этом объекты могут быть уникальными
или идентичными.

	"Класс" - это синтексическая конструкция описывающая объекты.

	"Структура" - это синтаксическая конструкция описывающая объекты.

	Классы и структуры состоят из полей. Поля бывают двух типов - переменные и методы.
	
	Переменные члены класса описывают, каким являются объект - харрактеризует какой он. Переменные члены
отображают состояние объекта.

				::Методы.::

	"Метод" - это функция внутри класса.

	Методы определяют поведение объектов и взаимодействие их с другими объектами.
	 ________
	|	Class
	 --------
	|	Data		
	|		Переменные члены класса.
	|			Описывают характеристики объектов. Т.е. харрактеризуют объект.
	|			Так же могут отображать состояние объекта.
	|			Это самые обычные переменные, объявленные внутри класса - структуры
	 --------
	|	Method
	|		Методы оперделяют поведение объекта и взаимодействие их (объектов) с другими объектами.
	|		Метод - это функция внутри класса.
	 --------

	Если функция вызывается сама по себе, то метод может быть вызван только для какого-то объекта.

	Чтобы хотябы раз вызвать метод, нужно создать хотябы один объект. 
	 
	Прежде чем использовать класс, его нужно объявить и написать.

	Создовая структуру или класс, мы создаём новый тип данных, а обяъявляя объекты этого класса или
структуры - мы создаём переменные нашего типа.

	Классы и структуры ещё называют пользовательскими типами данных.

	'Класс'		- это тип данных.
	'Структура'	- это тип данных.
	'Объект'	- это обычная переменная.

----------------------------------------------------------------------------------------------------------------------------

2021.03.17		::Введение в ООП.::

repos\Intro\main.cpp