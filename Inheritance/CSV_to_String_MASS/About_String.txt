тупо более менее понятная информация о String)))
[I]
Контейнер string библиотеки STL для работы со строками
string – объект-строка с дополнительными свойствами и методами.
Для работы с этим объектом необходимо подключить библиотеку
#include<string>
string s; – объявление пустой строки;
string s(str); – объявление строки и инициализация ее значением str
(такий же объект типа string или строковая константа в двойных
кавычках “ ”);
Операции
s=”Привет” – присвоение
s+=”111” – добавление (получим строку “Привет111”)
s[i] – обращение к символу на чтение и на запись (первый символ имеет
индекс 0)
Методы:
s.append(str) – добавление в конец s строки str <=> s+=str;
s.append(str,n) – добавление в конец строки s n первых символов
строки str;
s.append(str,i,n) – добавление в конец строки s n первых символов
строки str, взятых начиная с позиции i
s.assign – присваивание строки <=> опреации “=”. Возможные формы
записи такие же как и у append
s.at(i) – возвращает i-й символ строки <=> s
s.c_str() – возвращает С-строку (типа char* для совместимости со
старыми программами)
s.empty() – возвращает true, если строка пустая
s.erase() – очистить строку <=> s=””
s.erase(n) – оставить только первые n символов, остальные удалить
s.erase(i,n) – удалить n символов начиная с позиции i
s.find(str) – возвращает позицию, начиная с которой подстрока str
входит в строку s
s.find(str,i) – возвращает позицию, начиная с которой подстрока str
входит в строку s, поиск начинается с позиции i
Если подстрока не найдена, то будет возвращено значение string::npos
(неопределенная позиция)
s.insert(i,str) – вставка подстроки str в s начиная с позиции i
s.insert(i,str,n) – вставка первых n символов подстроки str в s
начиная с позиции i
s.insert(i,str,j,n) – вставка первых n символов подстроки str,
взятых начиная с позиции j, в s начиная с позиции i
s.length() – возвращает длину строки
s.replace(i,n,str) – заменить n символов начиная с позиции i на
строку str
s.replace(i,n,str,m) – заменить n символов начиная с позиции i на m
первых символов строки str
s.replace(i,n,str,j,m) – заменить n символов начиная с позиции i
на m первых символов строки str, взятых начиная с позиции j
s.resize(n) – уменьшение строки до n первых символов
s.resize(n,ch) – увеличение строки до n символов с добавлением
символов ch
s.substr(i,n) – возвращает подстроку из n символов, взятых начиная с
позиции i
int(ch) – получение кода символа ch
(char)i – получение символа с кодом i
Преобразование типов:
i=atoi(s.c_str()) – преобразование строки s в целое число i
f=atof(s.c_str()) – преобразование строки s в вещественное число f
Чтение и вывод строк (аналогично в файл)
cout<<str – вывод на экран
cin>>str – чтение с клавиатуры
Пример: (чтение из файла построчно (вместе с пробелами))